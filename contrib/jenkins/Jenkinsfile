pipeline {
    agent any
     stages 
    {   
        stage('TBB')
        {
            steps
            {
                sh """
                wget --no-clobber https://github.com/01org/tbb/archive/4.4.6.tar.gz
                tar xvf 4.4.6.tar.gz
                cd tbb-4.4.6
                make clean && make stdver=c++11
                cp -r include/tbb $WORKSPACE/build/include
                cp build/*_release/*.so* $WORKSPACE/build/lib
                """
            }
        }
        stage('OpenEXR')
        {
            steps
            {
                sh """
                wget --no-clobber http://download.savannah.nongnu.org/releases/openexr/ilmbase-2.2.0.tar.gz
                tar xvf ilmbase-2.2.0.tar.gz
                cd ilmbase-2.2.0
                ./configure --prefix=$WORKSPACE/build && make clean && make && make install
                
                export LD_LIBRARY_PATH=$WORKSPACE/build/lib
                
                cd $WORKSPACE

                wget --no-clobber http://download.savannah.nongnu.org/releases/openexr/openexr-2.2.0.tar.gz
                tar xvf openexr-2.2.0.tar.gz
                cd openexr-2.2.0
                ./configure --prefix=$WORKSPACE/build && make clean && make && make install
                """
            }
        }
        stage('Python')
        {
            steps
            {
                sh """wget --no-clobber https://www.python.org/ftp/python/2.7.13/Python-2.7.13.tgz
                tar xvf Python-2.7.13.tgz
                cd Python-2.7.13
                ./configure --enable-shared --prefix=$WORKSPACE/build --enable-unicode=ucs4
                make clean && make && make install
                """
            }
        }
        stage('Boost')
        {
            steps
            {
                sh """wget --no-clobber https://dl.bintray.com/boostorg/release/1.65.1/source/boost_1_65_1.tar.gz
                tar xvf boost_1_65_1.tar.gz
                cd boost_1_65_1
                export CPLUS_INCLUDE_PATH=$WORKSPACE/build/include/python2.7
                ./bootstrap.sh --prefix=$WORKSPACE/build --with-python==$WORKSPACE/build/bin/python --with-python-root=$WORKSPACE/build --without-libraries=log
                ./bjam -d+2 -j 4 cxxflags="-std=c++11" variant=release link=shared threading=multi install"""
            }
        }
        stage('Build') 
        {
            steps 
            {
                sh """
                scons install DEBUG=1 \\
                BOOST_LIB_SUFFIX= \\
                BOOST_INCLUDE_PATH=$WORKSPACE/build/include \\
                BOOST_LIB_PATH=$WORKSPACE/build/lib \\
                OPENEXR_INCLUDE_PATH=$WORKSPACE/build/include \\
                OPENEXR_LIB_PATH=$WORKSPACE/build/lib \\
                ILMBASE_INCLUDE_PATH=$WORKSPACE/build/include \\ 
                ILMBASE_LIB_PATH=$WORKSPACE/build/lib \\
                PYTHON_CONFIG=$WORKSPACE/build/bin/python-config
                """
            }
        }
    }
}
